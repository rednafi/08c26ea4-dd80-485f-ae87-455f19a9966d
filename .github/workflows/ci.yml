name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python 3.13 environment
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Install uv
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Install project dependencies using uv
      - name: Install dependencies
        run: uv sync

      # Run linter to check code conformity
      - name: Run lint-check
        run: make lint-check

      # Run unit tests
      - name: Run unit tests
        run: make test

      # Spin up the server using Docker Compose
      - name: Run container
        run: make run-container

      # Wait for the server to be ready
      - name: Wait for server to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5001 > /dev/null; then
              echo "Server is up"
              exit 0
            fi
            echo "Waiting for server..."
            sleep 1
          done
          echo "Server did not start in time"
          exit 1

      # Run integration tests
      - name: Run integration tests
        run: make test-integration

      # Cleanup: stop and remove the Docker container
      - name: Cleanup
        if: always()
        run: make kill-container
